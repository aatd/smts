swagger: "2.0"
info:
  version: "1.0"
  title: "Where's my Thief? - API"
  description: " API zur Webanwendung"

basePath: "/v1"
schemes:
  - "http"
tags:
  - name: "Users"
    description: "Benutzerverwaltung"
  - name: "Devices"
    description: "devices"

paths:
  /users:
    post:
      tags:
        - "Users"
      summary: "create new User"
      description: "check if Username is available"
      operationId: "createUser"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "user"
          schema:
            $ref: "#/definitions/User"
          required: true

      responses:
        201:
          description: User created
          schema:
            $ref: "#/definitions/UserData"

        409:
          description: wrong username/ password

  /users/login:
    post:
      tags:
        - "Users"
      summary: "login User"
      operationId: "loginUser"
      consumes:
        - "application/json"
      description: "check if Username & password are correct  "
      parameters:
        - in: "body"
          name: "User"
          schema:
            $ref: "#/definitions/User"

      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserData"
        401:
          description: wrong username/ password

  /users/logout:
    post:
      tags:
        - "Users"
      summary: "logout user"

      responses:
        200:
          description: OK

  /users/{userId}:
    put:
      tags:
        - "Users"
      summary: "Update User"
      operationId: "updateUser"
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "User"
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserData"

    get:
      tags:
        - "Users"
      summary: "get User by ID"
      operationId: "getUserbyId"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/UserData"

    delete:
      tags:
        - "Users"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "ok"

  /users/{userId}/devices:
    get:
      tags:
        - "Users"
      summary: "get Devices from User"
      operationId: "find all Devices"
      produces:
        - "application/json"
      parameters:
        - name: "userId"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: OK
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Device"

  /devices:
    post:
      tags:
        - "Devices"
      summary: "add Device"
      operationId: "addDevice"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"

          required: true
          name: "device"
          schema:
            $ref: "#/definitions/Device"

      responses:
        201:
          description: "Device created"

  /devices/{imei}:
    get:
      tags:
        - "Devices"
      summary: "get Device by ID"
      produces:
        - "application/json"
      parameters:
        - name: "imei"
          in: "path"
          required: true
          type: "string"

      responses:
        200:
          description: "ok"
          schema:
            $ref: "#/definitions/DeviceData"
            
    delete:
      tags:
        - "Devices"
      parameters:
        - name: "imei"
          in: "path"
          required: true
          type: "string"
      responses:
        "200":
          description: "ok"

  /devices/{imei}/status:
    get:
      tags:
        - "Devices"
      summary: "get status of device"
      produces:
        - "application/json"
      parameters:
        - name: "imei"
          in: "path"
          required: true
          type: "string"

      responses:
        200:
          description: "ok"

  /devices/{imei}/locations:
    post:
      tags:
        - "Devices"
      summary: "add GPS-Position to Device"

      produces:
        - "application/json"

      consumes:
      - "application/json"
      - "application/x-www-form-urlencoded"
      
      parameters:
        - name: "imei"
          in: "path"
          required: true
          type: "string"
        - in: "body"
          name: "gpsPosition"
          required: true
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GPSPosition"

      responses:
        200:
          description: "Ok"

    get:
      tags:
        - "Devices"
      summary: "Get Locations of device"
      parameters:
        - in: query
          name: start
          type: "string"
          description: If only start value is given, the locations from this date until now are returned. Formatted as specified in ISO 8601
        - in: query
          name: end
          type: "string"
          description: If end parameter is given, the locations in between this time frame will be returned.
        - name: "imei"
          in: "path"
          required: true
          type: "string"

      responses:
        200:
          description: "OK"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/GPSPosition"

    delete:
      tags:
        - "Devices"
      parameters:
        - name: "imei"
          in: "path"
          required: true
          type: "string"
      responses:
        200:
          description: "ok"

definitions:
  User:
    type: "object"
    properties:
      id:
        type: "string"

      name:
        type: "string"
      password:
        type: "string"
      phoneNumber:
        type: "string"

      devices:
        type: "array"
        items:
          type: "integer"
          format: "int64"

  UserData:
    type: "object"
    properties:
      id:
        type: "string"

      name:
        type: "string"

      phoneNumber:
        type: "string"

      devices:
        type: "array"
        items:
          type: "integer"
          format: "int64"
  
  DeviceData:
    type: "object"
    properties:
      name:
        type: "string"
      
      imei:
        type: "string"
      
      
      owner:
        type: "string"
      
      devicePhoneNumber:
        type: "string"
       
       
      
      ownerPhoneNumber:
        type: "string"
      
      battery:
        type: "number"
        format: "float"
  
  Device:
   type: "object"
   properties:
    name:
      type: "string"
      
    imei:
      type: "string"
      
      
    owner:
      type: "string"
      
    devicePhoneNumber:
       type: "string"
       
       
      
    ownerPhoneNumber:
      type: "string"
      
    battery:
      type: "number"
      format: "float"
      
    locations:
      type: "array"
      items:
        $ref: "#/definitions/gpsPosition"
  
  GPSPosition:
    type: "object"
    properties:
      latitude:
        type: "number"
        format: "float"

      longitude:
        type: "number"
        format: "float"
      height:
        type: "number"
        format: "float"
      time:
        type: "string"
        format: "date-time"
      velocity:
        type: "number"
        format: "float"
